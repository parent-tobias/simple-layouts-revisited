{"ts":1363110998139,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"jQuery(function() {\r\n    // Set up the main Events Manager Application\r\n    window.DartsLeague = {};\r\n    DartsLeague.Models = {};\r\n\tDartsLeague.Collections = {};\r\n\tDartsLeague.Views = {};\r\n\t\r\n\tDartsLeague.TourneysApp = new Backbone.Marionette.Application({});\r\n\t\r\n\tDartsLeague.TourneysApp.addRegions({\r\n\t\tappMain: \"#main-content\",\r\n        modalRegion: \"#modal-dialog\"\r\n\t});\r\n\t\r\n\tDartsLeague.TourneysApp.on(\"initialize:after\", function(options){\r\n\t  if (Backbone.history){\r\n\t\tBackbone.history.start();\r\n\t  }\r\n\t});\r\n\t\r\n\t/*************************************************************\r\n\t *\r\n\t *  Models and Collections\r\n\t *\r\n\t *************************************************************/\r\n\t\r\n\t//-------------------------------------------------------------\r\n\t// Member model and collection\r\n\t//\r\n\t//  The Member model contains the member's identifying info.\r\n\t//  Within the context of the Event, the Members collection will\r\n\t//    be identified as 'teamMembers'.\r\n\t//-------------------------------------------------------------\r\n\tDartsLeague.Models.Member = Backbone.Model.extend({\r\n\r\n\t});\r\n\tDartsLeague.Collections.Members = Backbone.Collection.extend({\r\n\t\tmodel: DartsLeague.Models.Member,\r\n\r\n\t});\r\n\t\r\n\t//-------------------------------------------------------------\r\n\t// Team model and collection\r\n\t//\r\n\t//  The Team model contains the details about each team, which at this\r\n\t//    point consists of a teamMembers collection and an ID.\r\n\t//-------------------------------------------------------------\r\n\tDartsLeague.Models.Team = Backbone.Model.extend({\r\n\t\tinitialize: function(){\r\n\t\t\t// Each team is initially containing an array, we need to convert that\r\n\t\t\t// into a Collection...\r\n\t\t\tvar membersCollection = new DartsLeague.Collections.Members(this.get('teamMembers'));\r\n\t\t\tthis.set('teamMembers', membersCollection);\r\n\t\t},\r\n\t});\r\n\tDartsLeague.Collections.Teams = Backbone.Collection.extend({\r\n\t\tmodel: DartsLeague.Models.Team,\r\n\t});\r\n\t\r\n\t//-------------------------------------------------------------\r\n\t// Games model (no collection in this context)\r\n\t//\r\n\t//  The Game model contains information about the specific game\r\n\t//    instance.\r\n\t//-------------------------------------------------------------\r\n\tDartsLeague.Models.Game = Backbone.Model.extend({\r\n\r\n\t});\r\n\t\r\n\t//-------------------------------------------------------------\r\n\t// EventGame model and collection\r\n\t//\r\n\t//  The EventGame model contains a Game model and a collection of\r\n\t//    TeamMembers (an instance of the Member collection).\r\n\t//-------------------------------------------------------------\r\n\tDartsLeague.Models.TourneyGame = Backbone.Model.extend({\r\n\r\n\t\tinitialize: function(){\r\n\t\t\tvar game = new DartsLeague.Models.Game(this.get('game'));\r\n\t\t\tvar teams = new DartsLeague.Collections.Teams(this.get('teams'));\r\n\t\t\tthis.set('game', game);\r\n\t\t\tthis.set('teams', teams);\r\n\t\t},\r\n\t});\r\n\tDartsLeague.Collections.TourneyGames = Backbone.Collection.extend({\r\n\t\tmodel: DartsLeague.Models.TourneyGame,\r\n\t});\r\n\t\r\n\t//-------------------------------------------------------------\r\n\t// Event model and collection\r\n\t//\r\n\t//  The Event model is the top-level model in the event manager.\r\n\t//    It contains a collection of EventGames as well as information\r\n\t//    about the event itself.\r\n\t//-------------------------------------------------------------\r\n\tDartsLeague.Models.Tourney = Backbone.Model.extend({\r\n\r\n\t\tinitialize: function(){\r\n\t\t\tvar tourneyGames = new DartsLeague.Collections.TourneyGames(this.get('eventGames'));\r\n\t\t\tthis.set('tourneyGames', tourneyGames);\r\n\t\t}\r\n\t});\r\n\tDartsLeague.Collections.Tourneys = Backbone.Collection.extend({\r\n\t\tmodel: DartsLeague.Models.Tourney,\r\n\t\turl: './assets/json/mock-darts-tourneys.json',\r\n\t});\r\n    \r\n    /**************************************************************\r\n     * DartsLeague Tourney App Views\r\n     * \r\n     *************************************************************/\r\n     \r\n    // TourneyManagerLayout -- a layout containing all the sub-regions we'll\r\n    //    create at the topmost level of this particular app.\r\n    DartsLeague.Views.TourneyManagerLayout = Backbone.Marionette.Layout.extend({\r\n        template: \"#tourney-manager-layout\",\r\n        className: \"outer-center\",\r\n        \r\n        regions: {\r\n            tourneyListing: \"#tourney-manager-listing\",\r\n            tourneyDetails: \"#tourney-manager-detail\",\r\n            status: \"#tourney-manager-status\"\r\n        },\r\n    \t\r\n\t\tinitialize: function(){\r\n    \t\tvar that=this;\r\n\t\t\t\r\n\t\t\tDartsLeague.TourneysApp.vent.on(\"selectedTourney:changed\", function(myTourney){\r\n\t\t\t\tvar myTourneyDetails = new DartsLeague.Views.TourneyDetails({model: myTourney});\r\n\t\t\t\tthat.tourneyDetails.show(myTourneyDetails);\r\n\t\t\t});\r\n\t\t}\r\n    });\r\n     \r\n    DartsLeague.Views.TourneyListing = Backbone.Marionette.ItemView.extend({\r\n        tagName: \"li\",\r\n        template: \"#tourney-listing-template\", \r\n     \t\t\t\r\n\t\tinitialize: function(){\r\n\t\t\t_.bindAll(this);\r\n\t\t},\r\n\t\t\r\n\t\tevents: {\r\n\t\t\t\"click a\": \"showDetailedView\"\r\n\t\t},\r\n\t\t\r\n\t\tshowDetailedView: function(){\r\n\t\t\tDartsLeague.TourneysApp.vent.trigger(\"selectedTourney:changed\", this.model);\r\n\t\t}\r\n\t\t   });\r\n    \r\n    DartsLeague.Views.TourneysListing = Backbone.Marionette.CollectionView.extend({\r\n        tagName: \"ul\",\r\n        itemView: DartsLeague.Views.TourneyListing,\r\n    });\r\n        \r\n\tDartsLeague.Views.TourneyDetails = Backbone.Marionette.ItemView.extend({\r\n\t\ttemplate: \"#tourney-details-template\"\r\n\t});\r\n\r\n});\r\n"]],"start1":0,"start2":0,"length1":0,"length2":5455}]],"length":5455}
{"contributors":[],"silentsave":false,"ts":1363111073778,"patch":[[{"diffs":[[0," = {"],[-1,"};"],[0,"\r\n    "],[-1,"DartsLeague."],[1,"    "],[0,"Models"],[-1," = {};\r\n\tDartsLeague."],[1,": {},\r\n        "],[0,"Coll"]],"start1":94,"start2":94,"length1":55,"length2":39},{"diffs":[[0,"ions"],[-1," = {};\r\n\tDartsLeague.Views = {"],[1,": {},\r\n        Views: {},\r\n        UILib: {},\r\n        Controllers: {}\r\n    "],[0,"};\r\n"]],"start1":136,"start2":136,"length1":38,"length2":84},{"diffs":[[0,"\t});\r\n\r\n"],[1,"    /***************************************************************\r\n     * Controllers\r\n     * \r\n     * TourneysController: This will handle all the mediating for the top-\r\n     *    level tourneys events/views.\r\n     ***************************************************************/\r\n    DartsLeague.Controllers.TourneysController = {};\r\n    \r\n"],[0,"});\r\n"]],"start1":5472,"start2":5472,"length1":13,"length2":359}]],"length":5831,"saved":false}
{"ts":1363111210849,"patch":[[{"diffs":[[0,"League = {\r\n"],[1,"        Routers: {},\r\n"],[0,"        Mode"]],"start1":88,"start2":88,"length1":24,"length2":46},{"diffs":[[0,"\r\n    \r\n"],[1,"    \r\n    /***************************************************************\r\n     * Routers\r\n     * \r\n     * TourneysRouter: This will listen to URL changes, and route them to\r\n     *    the appropriate function.\r\n     ***************************************************************/\r\n    DartsLeague.Controllers.TourneysRouter = Backbone.Marionette.AppRouter.extend({});    \r\n    \r\n"],[0,"});\r\n"]],"start1":5840,"start2":5840,"length1":13,"length2":395}]],"length":6235,"saved":false}
