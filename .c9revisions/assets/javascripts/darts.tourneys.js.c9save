{"ts":1363023258596,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"jQuery(function() {\r\n    // Set up the main Events Manager Application\r\n    window.DartsLeague = {};\r\n\tDartsLeague.Models = {};\r\n\tDartsLeague.Collections = {};\r\n\tDartsLeague.Views = {};\r\n\t\r\n\tDartsLeague.TourneysApp = new Backbone.Marionette.Application({});\r\n\t\r\n\tDartsLeague.TourneysApp.addRegions({\r\n\t\tappMain: \"#main-content\",\r\n        modalRegion: \"#modal-dialog\"\r\n\t});\r\n\t\r\n\tDartsLeague.TourneysApp.on(\"initialize:after\", function(options){\r\n\t  if (Backbone.history){\r\n\t\tBackbone.history.start();\r\n\t  }\r\n\t});\r\n\t\r\n\t/*************************************************************\r\n\t *\r\n\t *  Models and Collections\r\n\t *\r\n\t *************************************************************/\r\n\t\r\n\t//-------------------------------------------------------------\r\n\t// Member model and collection\r\n\t//\r\n\t//  The Member model contains the member's identifying info.\r\n\t//  Within the context of the Event, the Members collection will\r\n\t//    be identified as 'teamMembers'.\r\n\t//-------------------------------------------------------------\r\n\tDartsLeague.Models.Member = Backbone.Model.extend({\r\n\r\n\t});\r\n\tDartsLeague.Collections.Members = Backbone.Collection.extend({\r\n\t\tmodel: DartsLeague.Models.Member,\r\n\r\n\t});\r\n\t\r\n\t//-------------------------------------------------------------\r\n\t// Team model and collection\r\n\t//\r\n\t//  The Team model contains the details about each team, which at this\r\n\t//    point consists of a teamMembers collection and an ID.\r\n\t//-------------------------------------------------------------\r\n\tDartsLeague.Models.Team = Backbone.Model.extend({\r\n\t\tinitialize: function(){\r\n\t\t\t// Each team is initially containing an array, we need to convert that\r\n\t\t\t// into a Collection...\r\n\t\t\tvar membersCollection = new DartsLeague.Collections.Members(this.get('teamMembers'));\r\n\t\t\tthis.set('teamMembers', membersCollection);\r\n\t\t},\r\n\t});\r\n\tDartsLeague.Collections.Teams = Backbone.Collection.extend({\r\n\t\tmodel: DartsLeague.Models.Team,\r\n\t});\r\n\t\r\n\t//-------------------------------------------------------------\r\n\t// Games model (no collection in this context)\r\n\t//\r\n\t//  The Game model contains information about the specific game\r\n\t//    instance.\r\n\t//-------------------------------------------------------------\r\n\tDartsLeague.Models.Game = Backbone.Model.extend({\r\n\r\n\t});\r\n\t\r\n\t//-------------------------------------------------------------\r\n\t// EventGame model and collection\r\n\t//\r\n\t//  The EventGame model contains a Game model and a collection of\r\n\t//    TeamMembers (an instance of the Member collection).\r\n\t//-------------------------------------------------------------\r\n\tDartsLeague.Models.TourneyGame = Backbone.Model.extend({\r\n\r\n\t\tinitialize: function(){\r\n\t\t\tvar game = new DartsLeague.Models.Game(this.get('game'));\r\n\t\t\tvar teams = new DartsLeague.Collections.Teams(this.get('teams'));\r\n\t\t\tthis.set('game', game);\r\n\t\t\tthis.set('teams', teams);\r\n\t\t},\r\n\t});\r\n\tDartsLeague.Collections.TourneyGames = Backbone.Collection.extend({\r\n\t\tmodel: DartsLeague.Models.TourneyGame,\r\n\t});\r\n\t\r\n\t//-------------------------------------------------------------\r\n\t// Event model and collection\r\n\t//\r\n\t//  The Event model is the top-level model in the event manager.\r\n\t//    It contains a collection of EventGames as well as information\r\n\t//    about the event itself.\r\n\t//-------------------------------------------------------------\r\n\tDartsLeague.Models.Tourney = Backbone.Model.extend({\r\n\r\n\t\tinitialize: function(){\r\n\t\t\tvar tourneyGames = new DartsLeague.Collections.TourneyGames(this.get('eventGames'));\r\n\t\t\tthis.set('tourneyGames', tourneyGames);\r\n\t\t}\r\n\t});\r\n\tDartsLeague.Collections.Tourneys = Backbone.Collection.extend({\r\n\t\tmodel: DartsLeague.Models.Tourney,\r\n\t\turl: './assets/json/mock-darts-tourneys.json',\r\n\t});\r\n    \r\n    /**************************************************************\r\n     * DartsLeague Tourney App Views\r\n     * \r\n     *************************************************************/\r\n     \r\n    // TourneyManagerLayout -- a layout containing all the sub-regions we'll\r\n    //    create at the topmost level of this particular app.\r\n    DartsLeague.Views.TourneyManagerLayout = Backbone.Marionette.Layout.extend({\r\n        template: \"#tourney-manager-layout\",\r\n        className: \"outer-center\",\r\n        \r\n        regions: {\r\n            tourneyListing: \"#tourney-manager-listing\",\r\n            tourneyDetails: \"#tourney-manager-details\",\r\n            status: \"#tourney-manager-status\"\r\n        },\r\n    \t\r\n\t\tinitialize: function(){\r\n    \t\tvar that=this;\r\n\t\t\t\r\n\t\t\tDartsLeague.TourneysApp.vent.on(\"selectedTourney:changed\", function(myTourney){\r\n\t\t\t\tthat.tourneyDetails.show(new DartsLeague.Views.TourneyDetails({model: myTourney}));\r\n\t\t\t});\r\n\t\t}\r\n    });\r\n     \r\n    DartsLeague.Views.TourneyListing = Backbone.Marionette.ItemView.extend({\r\n        tagName: \"li\",\r\n        template: \"#tourney-listing-template\", \r\n     \t\t\t\r\n\t\tinitialize: function(){\r\n\t\t\t_.bindAll(this);\r\n\t\t},\r\n\t\t\r\n\t\tevents: {\r\n\t\t\t\"click a\": \"showDetailedView\"\r\n\t\t},\r\n\t\t\r\n\t\tshowDetailedView: function(){\r\n\t\t\tDartsLeague.TourneysApp.vent.trigger(\"selectedTourney:changed\", this.model);\r\n\t\t}\r\n\t\t   });\r\n    \r\n    DartsLeague.Views.TourneysListing = Backbone.Marionette.CollectionView.extend({\r\n        tagName: \"ul\",\r\n        itemView: DartsLeague.Views.TourneyListing,\r\n    });\r\n        \r\n\tDartsLeague.Views.TourneyDetails = Backbone.Marionette.ItemView.extend({\r\n\t\ttemplate: \"#tourney-details-template\"\r\n\t});\r\n\r\n});\r\n"]],"start1":0,"start2":0,"length1":0,"length2":5407}]],"length":5407}
{"contributors":[],"silentsave":false,"ts":1363023893118,"patch":[[{"diffs":[[0," = {"],[-1,"};\r\n\tDartsLeague.Models = {};\r\n\tDartsLeague.Collections = {};\r\n\tDartsLeague.Views = {};"],[1,"\r\n        Routers: {},\r\n        Controllers: {},\r\n        Models: {},\r\n        Collections: {},\r\n        Views: {},\r\n        UILib: {}\r\n    };\r\n\r\n    // ModalRegion. We'll want to fint a div with the modal-region ID.\r\n    //  This particular ModalRegion is dependant on jQuery.\r\n    DartsLeague.UILib.ModalRegion = Backbone.Marionette.Region.extend({\r\n        el: \"#modal\",\r\n        \r\n        constructor: function(){\r\n            _.bindAll(this);\r\n            Backbone.Marionette.Region.prototype.constructor.apply(this, arguments);\r\n            this.on(\"view:show\", this.showModal, this);\r\n            $(this.el).dialog({autoOpen: false, modal: true})\r\n        },\r\n        getEl: function(selector){\r\n            var $el = $(selector);\r\n            $el.on(\"hidden\", this.close);\r\n            return $el;\r\n        },\r\n        showModal: function(options, view){\r\n            // This is called with a series of jQuery options, and with a view to\r\n            //  display within the dialog.\r\n            $(this.el).dialog(options);\r\n            this.show(view);\r\n            view.on(\"close\", this.hideModal, this);\r\n            $(this.el).dialog(\"open\");\r\n        },\r\n        hideModal: function(){\r\n            $(this.el).dialog(\"close\");\r\n        }\r\n    })"],[0,"\r\n\t\r"]],"start1":94,"start2":94,"length1":95,"length2":1265}]],"length":6577,"saved":false}
{"ts":1363024069528,"patch":[[{"diffs":[[0," = {"],[1,"};"],[0,"\r\n    "],[-1,"    Routers: {},\r\n        Controllers: {},\r\n        Models: {},\r\n        Collections: {},\r\n        Views: {},\r\n        UILib: {}\r\n    };\r\n\r\n    "],[1,"DartsLeague.Models = {};\r\n\tDartsLeague.Collections = {};\r\n\tDartsLeague.Views = {};\r\n\tDartsLeague.UILib = {};\r\n\t\r\n\t/*********************************************************\r\n\t* UI Lib: A set of views that we may need to repurpose. For now, this\r\n\t*  will consist of a modal dialog Region, a tabsView and an accordionView.\r\n\t*  At some future date, I'd like to abstract this out, but for the\r\n\t*  purposes of this tutorial, it'll be in this same file.\r\n\t*  NOTE: These three UI tools are dependent on jQueryUI.\r\n\t*********************************************************/\r\n\t\r\n\t"],[0,"// M"]],"start1":94,"start2":94,"length1":158,"length2":592},{"diffs":[[0,"t to fin"],[-1,"t"],[1,"d"],[0," a div w"]],"start1":707,"start2":707,"length1":17,"length2":17},{"diffs":[[0,"dal-"],[-1,"region ID.\r\n    //  This particular ModalRegion is dependant on jQuery.\r\n    "],[1,"dialog ID.\r\n\t"],[0,"Dart"]],"start1":734,"start2":734,"length1":85,"length2":21},{"diffs":[[0,"tend({\r\n"],[-1,"        "],[1,"\t\t"],[0,"el: \"#mo"]],"start1":812,"start2":812,"length1":24,"length2":18},{"diffs":[[0,"odal\",\r\n"],[-1,"        \r\n        "],[1,"\t\t\r\n\t\t"],[0,"construc"]],"start1":829,"start2":829,"length1":34,"length2":22},{"diffs":[[0,"ion(){\r\n"],[-1,"            "],[1,"\t\t\t"],[0,"_.bindAl"]],"start1":861,"start2":861,"length1":28,"length2":19},{"diffs":[[0,"this);\r\n"],[-1,"            "],[1,"\t\t\t"],[0,"Backbone"]],"start1":882,"start2":882,"length1":28,"length2":19},{"diffs":[[0,"rguments);\r\n"],[-1,"            "],[1,"\t\t\t"],[0,"this.on(\"vie"]],"start1":955,"start2":955,"length1":36,"length2":27},{"diffs":[[0,"al, this);\r\n"],[-1,"            "],[1,"\t\t\t"],[0,"$(this.el).d"]],"start1":1003,"start2":1003,"length1":36,"length2":27},{"diffs":[[0,": true})"],[1,";"],[0,"\r\n"],[-1,"        },\r\n        "],[1,"\t\t},\r\n\t\t\r\n\t\t"],[0,"getEl: f"]],"start1":1059,"start2":1059,"length1":38,"length2":31},{"diffs":[[0,"ctor){\r\n"],[-1,"            "],[1,"\t\t\t"],[0,"var $el "]],"start1":1102,"start2":1102,"length1":28,"length2":19},{"diffs":[[0,"ctor);\r\n"],[-1,"            "],[1,"\t\t\t"],[0,"$el.on(\""]],"start1":1129,"start2":1129,"length1":28,"length2":19},{"diffs":[[0,"lose);\r\n"],[-1,"            "],[1,"\t\t\t"],[0,"return $"]],"start1":1163,"start2":1163,"length1":28,"length2":19},{"diffs":[[0,"n $el;\r\n"],[-1,"        },\r\n        "],[1,"\t\t},\r\n\t\t\r\n\t\t"],[0,"showModa"]],"start1":1179,"start2":1179,"length1":36,"length2":28},{"diffs":[[0,"){\r\n"],[-1,"            // This is called with a series of jQuery options, and with a view to\r\n            //  display within the dialog.\r\n            "],[1,"\t\t\t"],[0,"$(th"]],"start1":1232,"start2":1232,"length1":147,"length2":11},{"diffs":[[0,"ions);\r\n"],[-1,"            "],[1,"\t\t\t"],[0,"this.sho"]],"start1":1260,"start2":1260,"length1":28,"length2":19},{"diffs":[[0,"view);\r\n"],[-1,"            "],[1,"\t\t\t"],[0,"view.on("]],"start1":1281,"start2":1281,"length1":28,"length2":19},{"diffs":[[0,"\"close\","],[-1," "],[0,"this.hid"]],"start1":1300,"start2":1300,"length1":17,"length2":16},{"diffs":[[0,"this);\r\n"],[-1,"            "],[1,"\t\t\t"],[0,"$(this.e"]],"start1":1324,"start2":1324,"length1":28,"length2":19},{"diffs":[[0,");\r\n"],[-1,"        },\r\n        "],[1,"\t\t},\r\n\t\t\r\n\t\t"],[0,"hide"]],"start1":1359,"start2":1359,"length1":28,"length2":20},{"diffs":[[0,"ion(){\r\n"],[-1,"            "],[1,"\t\t\t"],[0,"$(this.e"]],"start1":1391,"start2":1391,"length1":28,"length2":19},{"diffs":[[0,");\r\n"],[-1,"        }\r\n    })"],[1,"\t\t}\r\n\t});\t"],[0,"\r\n\t\r"]],"start1":1427,"start2":1427,"length1":25,"length2":18},{"diffs":[[0,": \"#main"],[-1,"-c"],[1,"C"],[0,"ontent\","]],"start1":1566,"start2":1566,"length1":18,"length2":17},{"diffs":[[0,"\",\r\n"],[-1,"        modalRegion: \"#modal-dialog\""],[1,"\t\tmodalDialog: DartsLeague.UILib.ModalRegion"],[0,"\r\n\t}"]],"start1":1581,"start2":1581,"length1":44,"length2":52},{"diffs":[[0,"nstance."],[-1,""],[1," Note that, in the context of our overall Tourneys\r\n\t//    collection, we never need the Games collection -- but we will\r\n\t//    need to create one anyway, as it's going to be used elsewhere."],[0,"\r\n\t//---"]],"start1":3403,"start2":3403,"length1":16,"length2":207},{"diffs":[[0,"tend({\r\n\r\n\t});\r\n"],[1,"\r\n\tDartsLeague.Collections.Games = Backbone.Collection.extend({\r\n\t\tmodel: DartsLeague.Models.Game,\r\n\t})\r\n\r\n"],[0,"\t\r\n\t//----------"]],"start1":3714,"start2":3714,"length1":32,"length2":139},{"diffs":[[0,");\r\n"],[-1,"    \r\n    /*"],[1,"\t\r\n\r\n\t\t\r\n\t/"],[0,"****"]],"start1":5274,"start2":5274,"length1":20,"length2":19},{"diffs":[[0,"**\r\n"],[-1,"     * DartsLeague Tourney App"],[1,"\t *\r\n\t * "],[0," Views\r\n"],[-1,"    "],[1,"\t"],[0," *"],[-1," "],[0,"\r\n"],[-1,"    "],[1,"\t"],[0," ***"]],"start1":5348,"start2":5348,"length1":59,"length2":31},{"diffs":[[0,"*/\r\n"],[-1,"     \r\n    // TourneyManagerLayout -- a layout containing all the sub-regions we'll\r\n    //    create at the topmost level of this particular app.\r\n    DartsLeague.Views.TourneyManagerLayout = Backbone.Marionette.Layout.extend({\r\n        template: \"#tourney-manager-layout\",\r\n        className: \"outer-center\",\r\n        \r\n        regions: {\r\n            tourneyListing: \"#tourney-manager-listing\",\r\n            tourneyDetails: \"#tourney-manager-details\",\r\n            status: \""],[1,"\t\r\n\tDartsLeague.Views.TourneyDialog = Backbone.Marionette.ItemView.extend({\r\n\t\ttemplate: \"#tourney-dialog-template\",\r\n\t\tevents: {\r\n\t\t\t'click .save-tourney': \"saveTourney\",\r\n\t\t\t'click .discard-changes': \"discardChanges\"\r\n\t\t},\r\n\r\n\t\tonRender: function(){\r\n\t\t\t$(this.el).find(\".edit-tourney-button\").button();\r\n\t\t\t$(this.el).tooltip();\r\n\t\t},\r\n\r\n\t\tsaveTourney: function(){\r\n\t\t\tvar fields = $(this.el).find(\"form input\");\r\n\t\t\t_.each(fields, function(field){\r\n\t\t\t\tvar field = $(field);\r\n\t\t\t\tif(field.val() !== this.model.get(field.attr(\"name\"))) {\r\n\t\t\t\t\tthis.model.set(field.attr(\"name\"), field.val())\r\n\t\t\t\t};\r\n\t\t\t}, this);\r\n\t\t\tDartsLeague.TourneysApp.vent.trigger(\"tourney:before:save\", this.model);\r\n\t\t\t// I think I need to remove the nested collections/models to make this work.\r\n\t\t\tthis.model.unset(\"tourneyGames\");\r\n\t\t\tthis.model.unset(\"eventGames\");\r\n\t\t\tthis.model.save();\r\n\t\t\tthis.close();\r\n\t\t\tDartsLeague.TourneysApp.vent.trigger(\"tourney:save\", this.model);\r\n\t\t},\r\n\t\t\r\n\t\tdiscardChanges: function(){\r\n\t\t\tthis.close();\r\n\t\t}\r\n\t\t\r\n\t});\r\n\r\n\tDartsLeague.Views.MemberDialog = Backbone.Marionette.ItemView.extend({\r\n\t\ttemplate: \"#member-dialog-template\",\r\n\t\tevents: {\r\n\t\t\t'click .edit-this-member': \"editThis\",\r\n\t\t\t'click .save-member': \"saveMember\",\r\n\t\t\t'click .discard-changes': \"discardChanges\"\r\n\t\t},\r\n\t\t\r\n\t\tonRender: function(){\r\n\t\t\t$(this.el).find(\".edit-member-button\").button();\r\n\t\t\t$(this.el).tooltip();\r\n\t\t},\r\n\t\teditThis: function(){\r\n\t\t\t$(this.el).find(\".display-member-info\").hide();\r\n\t\t\t$(this.el).find(\".edit-member-info\").show();\r\n\t\t},\r\n\t\t\r\n\t\tsaveMember: function(){\r\n\t\t\tvar fields = $(this.el).find(\"form input\");\r\n\t\t\t_.each(fields, function(field){\r\n\t\t\t\tvar field = $(field);\r\n\t\t\t\tif(field.val() !== this.model.get(field.attr(\"name\"))) {\r\n\t\t\t\t\tthis.model.set(field.attr(\"name\"), field.val())\r\n\t\t\t\t};\r\n\t\t\t}, this);\r\n\t\t\tDartsLeague.TourneysApp.vent.trigger(\"member:before:save\", this.model)\r\n\t\t\tthis.model.save();\r\n\t\t\t$(this.el).find(\".edit-member-info\").hide();\r\n\t\t\t$(this.el).find(\".display-member-info\").show();\r\n\t\t\tthis.close();\r\n\t\t\tDartsLeague.TourneysApp.vent.trigger(\"member:save\", this.model);\r\n\t\t},\r\n\t\t\r\n\t\tdiscardChanges: function(){\r\n\t\t\t$(this.el).find(\".edit-member-info\").hide();\r\n\t\t\t$(this.el).find(\".display-member-info\").show();\r\n\t\t\tthis.close();\r\n\t\t}\r\n\t\t\r\n\t});\r\n\t\r\n\tDartsLeague.Views.NoMembersView = Backbone.Marionette.ItemView.extend({\r\n\t\ttemplate:  \"#no-members-template\"\r\n\t});\r\n\t\r\n\tDartsLeague.Views.NoTeamsView = Backbone.Marionette.ItemView.extend({\r\n\t\ttemplate: \"#no-teams-template\"\r\n\t});\r\n\tDartsLeague.Views.MemberView = Backbone.Marionette.ItemView.extend({\r\n\t\ttemplate: \"#member-view-template\",\r\n\t\ttagName: \"li\",\r\n\t\tevents: {\r\n\t\t\t'click .edit': \"showEdit\"\r\n\t\t},\r\n\r\n\t\tshowEdit: function(){\r\n\t\t\tDartsLeague.TourneysApp.modalDialog.showModal(\r\n\t\t\t\t{title: \"View/Edit Member\",\r\n\t\t\t\t hide: \"fade\"\r\n\t\t\t\t}, \r\n\t\t\t\tnew DartsLeague.Views.MemberDialog({model: this.model})\r\n\t\t\t);\r\n\t\t\tDartsLeague.TourneysApp.modalDialog.$el.find(\".edit-member-info\").hide();\r\n\t\t}\r\n\t});\r\n\r\n\tDartsLeague.Views.TeamView = Backbone.Marionette.CompositeView.extend({\r\n\t\ttemplate: \"#team-view-template\",\r\n\t\titemView: DartsLeague.Views.MemberView,\r\n\t\titemViewContainer: \"#team-members-listing ul\",\r\n\t\temptyView: DartsLeague.Views.NoMembersView,\r\n\t\tevents: {\r\n\t\t\t\"click .add-team-member\": \"addMember\"\r\n\t\t},\r\n\t\t\r\n\t\tcollectionEvents: {\r\n\t\t\t\"change\": \"memberChanged\"\r\n\t\t},\r\n\t\t\r\n\t\tinitialize: function(options){\r\n\t\t\tthis.collection = this.model.get(\"teamMembers\");\r\n\t\t\tthis.maxPlayers = options.maxPlayers;\r\n\t\t},\r\n\t\t\r\n\t\tonRender: function(){\r\n\t\t\tif(this.collection.length >= this.maxPlayers){\r\n\t\t\t\tthis.$el.find(\".add-team-member\").hide();\r\n\t\t\t} else {\r\n\t\t\t\tthis.$el.find(\".add-team-member\").button();\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tmemberChanged: function(){\r\n\t\t\tthis.collection.trigger(\"reset\");\r\n\t\t},\r\n\t\r\n\t\taddMember: function(){\r\n\t\t\t// Need to figure this. Tasks involved:\r\n\t\t\t// 1) Display a collectionView, listing all members NOT currently on any team.\r\n\t\t\t// 2) Allow members in listing to be checked, \r\n\t\t\t//          limited to max players - current team length.\r\n\t\t\t// 3). Once members have been selected and user saves, add members to team,\r\n\t\t\t//          and close the modal dialog.\r\n\t\t}\r\n\t\r\n\t});\r\n\r\n\t// TabsView (a UIView), a layout that contains two regions: tabs and panes\t\r\n\tDartsLeague.UILib.TabsViewTab = Backbone.Marionette.CompositeView.extend({\r\n\t\ttemplate: \"#tab-view-tab-template\",\r\n\t\titemView: DartsLeague.Views.TeamView,\r\n\t\titemViewContainer: \"#teams-listing\",\r\n\t\t\r\n\t\temptyView: DartsLeague.Views.NoTeamsView,\r\n\r\n\t\ttemplateHelpers: {\r\n\t\t\tgetIndex: function(){ return this.index; }\r\n\t\t},\r\n\t\titemViewOptions: function(){\r\n\t\t\tvar maxPlayers = this.model.get(\"game\").get(\"team_max\");\r\n\t\t\treturn {\r\n\t\t\t\tmaxPlayers: maxPlayers\r\n\t\t\t}\r\n\t\t},\r\n\t\t\t\r\n\t\tinitialize: function(options){\r\n\t\t\tthis.$el.prop(\"id\", \"all-teams-accordion\"),\r\n\t\t\tthis.collection = this.model.get(\"teams\"),\r\n\t\t\t\r\n\t\t\tthis.$el.prop(\"id\", \"tab-\"+options.index);\r\n\t\t\tthis.model.set(\"index\", options.index);\r\n\t\t\tthis.model.set(\"gameName\", options.tabName);\r\n\t\t\tthis.model.set(\"gameUrl\", this.model.get(\"game\").get(\"url\"));\r\n\t\t},\r\n\t\t\r\n\t\tappendHtml: function(collectionView, itemView, index) {\r\n\t\t\tcollectionView.$el.find(\"#teams-listing\").append(\"<span>Team \"+(Number(index)+1)+\"</span>\");\r\n\t\t\tcollectionView.$el.find(\"#teams-listing\").append(itemView.el);\r\n\t\t}\r\n\t});\r\n\tDartsLeague.UILib.TabsView = Backbone.Marionette.CompositeView.extend({\r\n\t\tclassName: \"myTabsView\",\r\n\t\ttemplate: \"#tabs-view-template\",\r\n\t\titemView: DartsLeague.UILib.TabsViewTab,\r\n\t\tinitialize: function(options){\r\n\t\t\tthis.gamesList = new DartsLeague.Collections.Games(this.collection.pluck(\"game\"));\r\n\t\t},\r\n\t\titemViewOptions: function(model){\r\n\t\t\treturn {\r\n\t\t\t\tindex: this.collection.indexOf(model),\r\n\t\t\t\ttabName: model.get(\"game\").get(\"game\")\r\n\t\t\t}\r\n\t\t},\r\n\t\tappendHtml: function(collectionView, itemView, index){\r\n\t\t\tthisGame = this.gamesList.at(index);\r\n\t\t\tvar thisTabLink = $(\"<li />\").html(\r\n\t\t\t\t$(\"<a />\").attr('href', '#tab-'+index).append(thisGame.get(\"game\"))\r\n\t\t\t);\r\n\t\t\tcollectionView.$el.find(\"ul.tabs-view-tabs\").append(thisTabLink);\r\n\t\t\tcollectionView.$el.append(itemView.el);\r\n\t\t},\r\n\t\t\t\t\t\r\n\t})\r\n\t\r\n\tDartsLeague.Views.TourneyGamesListing = Backbone.Marionette.CompositeView.extend({\r\n\t\ttemplate: \"#tab-view-pane-template\",\r\n\t\ttemplateHelpers: {\r\n\t\t\tgameName: function(){\r\n\t\t\t\treturn this.game.get(\"game\");\r\n\t\t\t},\r\n\t\t},\r\n\t\t\r\n\t});\r\n\r\n\t// Main Event Manager layout - defines a listing region, a details region\r\n\t//  and a status region.\r\n\tDartsLeague.Views.TourneyManagerLayout = Backbone.Marionette.Layout.extend({\r\n\t\ttemplate: '#tourney-manager-layout',\r\n\t\tclassName: \"outer-center\",\r\n\t\t\r\n\t\tregions: {\r\n\t\t\ttourneyListing: '#tourney-manager-listing',\r\n\t\t\ttourneyDetails: '"],[0,"#tou"]],"start1":5436,"start2":5436,"length1":485,"length2":6724},{"diffs":[[0,"ger-"],[1,"detail',\r\n\t\t\t"],[0,"status"],[-1,"\"\r\n"],[1,":"],[0,"       "],[-1," },\r\n    "],[1,"'#tourney-manager-status'\r\n\t\t},\r\n\t"],[0,"\t\r\n\t"]],"start1":12169,"start2":12169,"length1":33,"length2":69},{"diffs":[[0,"){\r\n"],[-1,"    \t\tvar that=this;\r\n\t\t\t\r\n"],[0,"\t\t\tD"]],"start1":12260,"start2":12260,"length1":35,"length2":8},{"diffs":[[0,"\t\t\t\t"],[-1,"that.tourneyDetails.show("],[1,"// set up the collections \r\n\t\t\t\tvar myEventGamesCollection = myTourney.get(\"tourneyGames\");\r\n\t\t\t\tvar myGamesCollection = new DartsLeague.Collections.Games(myEventGamesCollection.pluck(\"game\"));\r\n\t\t\t\t// console.log(myGamesCollection);\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t// Establish the views and the layouts\r\n\t\t\t\tvar TourneyDetailLayout = "],[0,"new "]],"start1":12348,"start2":12348,"length1":33,"length2":329},{"diffs":[[0,"ey})"],[-1,")"],[0,";\r\n\t\t\t"],[-1,"});\r\n\t\t}\r\n    });\r\n     \r\n    DartsLeague.Views.TourneyListing = Backbone.Marionette.ItemView.extend({\r\n        tagName: \"li\",\r\n        "],[1,"\tvar TourneyStatus = new DartsLeague.Views.TourneyStatus({model: myTourney});\r\n\t\t\t\t\r\n\t\t\t\tvar myTourneyDetails = new DartsLeague.Views.TourneySpecificDetails({model: myTourney});\r\n\t\t\t\tvar gameTabsViewLayout = new DartsLeague.UILib.TabsView({collection: myEventGamesCollection});\r\n\t\t\t\t\r\n\t\t\t\tDartsLeague.TourneysApp.appMain.currentView.tourneyDetails.show(TourneyDetailLayout);\r\n\t\t\t\tDartsLeague.TourneysApp.appMain.currentView.status.show(TourneyStatus);\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tTourneyDetailLayout.tourneySpecificDetails.show(myTourneyDetails);\r\n\t\t\t\tTourneyDetailLayout.gameTabs.show(gameTabsViewLayout);\r\n\t\t\t\t\r\n\t\t\t\t$('.myTabsView').tabs();\r\n\t\t\t\t$(\".teams-accordion\").accordion({collapsible: true, active: false, heightStyle: \"content\"});\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t},\r\n\t\t\r\n\t});\r\n\t//-------------------------------------------------------------\r\n\t// Event (top-level) views\r\n\t//\r\n\t//  There are two views for events: the events listing and the\r\n\t//   events details.\r\n\t//-------------------------------------------------------------\t\r\n\r\n\tDartsLeague.Views.TourneyListing = Backbone.Marionette.ItemView.extend({\r\n\t\t"],[0,"temp"]],"start1":12725,"start2":12725,"length1":151,"length2":1115},{"diffs":[[0,"te\","],[-1," \r\n     \t"],[1,"\r\n\t\ttagName: \"li\",\r\n"],[0,"\t\t\r\n"]],"start1":13870,"start2":13870,"length1":17,"length2":28},{"diffs":[[0,"\r\n\t\t"],[-1,"   "],[1,"\r\n\t"],[0,"});\r\n"],[-1,"    \r\n    "],[1,"\t\r\n\tDartsLeague.Views.TourneyDetails = Backbone.Marionette.Layout.extend({\r\n\t\ttemplate: \"#tourney-details-layout\",\r\n\t\tregions: {\r\n\t\t\ttourneySpecificDetails: \"#tourney-details-region\",\r\n\t\t\tgameTabs:       \"#games-tabs-region\"\r\n\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n\t});\r\n\t"],[0,"Dart"]],"start1":14130,"start2":14130,"length1":26,"length2":276},{"diffs":[[0,".Tourney"],[-1,"sListing"],[1,"SpecificDetails"],[0," = Backb"]],"start1":14419,"start2":14419,"length1":24,"length2":31},{"diffs":[[0,"nette.Co"],[-1,"llection"],[1,"mposite"],[0,"View.ext"]],"start1":14459,"start2":14459,"length1":24,"length2":23},{"diffs":[[0,"({\r\n"],[-1,"        tagName: \"ul\",\r\n        itemView: DartsLeague.Views.TourneyListing,\r\n    });\r\n        "],[1,"\t\ttemplate: \"#tourney-specific-details-template\",\r\n\t\tevents: {\r\n\t\t\t\"click .edit-this-tourney\": \"showEdit\"\r\n\t\t},\r\n\t\tshowEdit: function(){\r\n\t\t\tDartsLeague.TourneysApp.modalDialog.showModal(\r\n\t\t\t\t{title: \"Edit this tournament\",\r\n\t\t\t\t hide: \"fade\"\r\n\t\t\t\t}, \r\n\t\t\t\tnew DartsLeague.Views.TourneyDialog({model: this.model})\r\n\t\t\t);\r\n\t\t\tDartsLeague.TourneysApp.modalDialog.$el.find(\".edit-tourney-info form\").formwizard();\r\n\t\t\tDartsLeague.TourneysApp.modalDialog.$el.find(\"#starts\").datetimepicker();\r\n\t\t\t\r\n\t\t}\r\n\r\n\t});\r\n\r\n\tDartsLeague.Views.TourneyStatus = Backbone.Marionette.Layout.extend({\r\n\t\ttemplate: \"#tourney-status-template\",\r\n\t\t\r\n\t});\r\n"],[0,"\r\n\tD"]],"start1":14485,"start2":14485,"length1":102,"length2":642},{"diffs":[[0,"ue.Views.Tourney"],[-1,"Details"],[1,"sListing"],[0," = Backbone.Mari"]],"start1":15135,"start2":15135,"length1":39,"length2":40},{"diffs":[[0,"bone.Marionette."],[-1,"I"],[1,"Composi"],[0,"te"],[-1,"m"],[0,"View.extend({\r\n\t"]],"start1":15166,"start2":15166,"length1":36,"length2":41},{"diffs":[[0,"rney"],[-1,"-details-template\""],[1,"s-listing-template\",\r\n\t\titemView: DartsLeague.Views.TourneyListing,\r\n\t\titemViewContainer: \"ul\",\r\n\t\t\r\n\t\tonRender: function(){\r\n\t\t\t$(\"#tourneys-listing ul\").menu();\r\n\t\t}\r\n\t\t\t\t"],[0,"\r\n\t});\r\n"],[1,"\t"],[0,"\r\n})"]],"start1":15223,"start2":15223,"length1":34,"length2":190}]],"length":15416,"saved":false}
{"ts":1363024822866,"patch":[[{"diffs":[[0," = {"],[-1,"};"],[0,"\r\n    "],[-1,"DartsLeague."],[1,"    Controllers: {},\r\n        "],[0,"Models"],[-1," = {};\r\n\tDartsLeague."],[1,": {},\r\n        "],[0,"Coll"]],"start1":94,"start2":94,"length1":55,"length2":65},{"diffs":[[0,"ions"],[-1," = {};\r\n\tDartsLeague."],[1,": {},\r\n        "],[0,"Views"],[-1," = {};\r\n\tDartsLeague.UILib = {"],[1,": {},\r\n        UILib: {}\r\n    "],[0,"};\r\n"]],"start1":162,"start2":162,"length1":64,"length2":58},{"diffs":[[0,"\r\n\t});\r\n"],[1,"    \r\n    /***************************************************************\r\n     * Controllers\r\n     * \r\n     * TourneysController: This will handle all the mediating for the top-\r\n     *    level tourneys events/views.\r\n     ***************************************************************/\r\n     \r\n    DartsLeague.Controllers.TourneysController = {};\r\n"],[0,"\t\r\n});\r\n"]],"start1":15404,"start2":15404,"length1":16,"length2":369}]],"length":15773,"saved":false}
{"ts":1363024833515,"patch":[[{"diffs":[[0,"*/\r\n"],[-1,"     \r\n"],[0,"    "]],"start1":15700,"start2":15700,"length1":15,"length2":8}]],"length":15766,"saved":false}
